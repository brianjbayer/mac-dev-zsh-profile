#!/usr/bin/env bash

# Exit script on any errors - exits script from $(subshells)
set -e

usage() {
  cat << USAGE
Usage: $(basename $0) [-afh]
This script installs and softlinks user's .zshrc to ~/<username>-profiles.

Optionally it can install and softlink a default .alias file as well.

OPTIONS:
  -a install and link .alias file
  -f force install and overwrite existing
  -h help
USAGE
}

download_and_link_profile() {
  profile_file_name=$1

  source_repository=brianjbayer/mac-dev-zsh-profile
  echo "Installing ${profile_file_name} from ${source_repository}"
  curl --location --remote-header-name \
    --remote-name "https://raw.githubusercontent.com/${source_repository}/main/${profile_file_name}"

  # Force the softlink to the profile directory
  # ln -s -f *source* *new-link*
  ln -s -f "$(pwd)/${profile_file_name}" "${USER_HOME_DIRECTORY}/${profile_file_name}"
}

# Command line arguments
while getopts 'afh' opt; do
  case "$opt" in

    a)
      install_alias=1
      ;;

    f)
      force_overwrite=1
      ;;

    ?|h)
      usage
      exit
      ;;
  esac
done
shift "$(($OPTIND -1))"

# --- MAIN ---
# Exit early if ~./zshrc exists unless forcing overwriting
[[ -f ~/.zshrc && -z ${force_overwrite} ]] && (echo " ~/.zshrc exists" ; exit 2)
# Exit early if ~./alias exists unless forcing overwriting
[[ -n ${install_alias} && -f ~/.alias && -z ${force_overwrite} ]] && (echo " ~/.alias exists" ; exit 2)

# Install to ~/<username>-profiles
USER_HOME_DIRECTORY=$(echo ~)
PROFILE_DIR="${USER_HOME_DIRECTORY}/$(id -un)-profiles"

# Make and goto profile directory
mkdir -p ${PROFILE_DIR}
cd ${PROFILE_DIR}

# Install the profile files
download_and_link_profile .zshrc

[[ -n ${install_alias} ]] && download_and_link_profile .alias
